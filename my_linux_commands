【替换字符串】
例如：file1.txt文件，cat替换成dog

1. 文件内
:g/cat/s//dog/g

2. 文件外
sed -i “s/cat/dog/g” file1.txt

【按行合并文件】
前提：文件行数相同

方法一：$ paste -d “\t” file_1 file_2 file_3 … > new_file

方法二：$ awk ‘NR==FNR{a[NR]=$0;nr=NR;}NR>FNR{print a[NR-nr]”\t”$0}’ file_1 file_2

方法三：$ awk ‘{getline f2 < “file_2”; print $0″\t”f2}’ file_1

【vim文件间复制】
如a文件复制n1-n2行到b文件中
a文件里输入：n1,n2 w!/tmp/x1
b文件里光标移到粘贴的位置后，输入：r /tmp/x1 

【找到重复行】
awk 'NR==FNR{a[$1]++}NR>FNR&&a[$1]>1' file file

【查找进程PID】
ps aux | grep "sh run.sh" | awk -F ' ' '{print $2}'

【awk正则匹配字符】
~ 关系操作符
~ 匹配正则
!~ 不匹配正则
如：awk -F ' ' '{if($0!~/#/ ) {print $0}}' feature_slots.conf

【压缩与解压】
1. 压缩：tar -cvf file.tar.gz file
2. 解压：tar -xvf file.tar.gz

【建立软链接】
ln -s /home/work/filename filename

【awk删除字符串前后空格，并过滤空行】
cat file | awk '{sub("^ *","");sub("^ $");print}' | tr -s '\n' > new_file

【字符统计】
%s/test/&/gn

【后台运行】
当有程序需要运行较长时间时，可以在脚本中用&设置后台作业，未完成则等待，否则继续下面的任务。
python file.py &
count=5
while [[ $count>1 ]]; do
    let count=0
    sleep 3s
    for s in `ps aux | grep "python" | awk -F ' ' {'print $2'}`
    do
        let count=$count+1
    done
done
#next command
